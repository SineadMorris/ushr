"0","simulate_studies <- function(simulation, nsubjects, detection_threshold, mean_params){"
"0","    "
"0","    # 1. simulate data for 3 resolutions: low, intermediate (0), and high"
"0","    data0 <- simulate_data(nsubjects = nsubjects, "
"0","                           detection_threshold = detection_threshold, "
"0","                           min_datapoints = 6, max_datapoints = 24, "
"0","                           mean_params = mean_params) %>%"
"0","        mutate(type = ""intermediate"")"
"0","    data_fine <- simulate_data(nsubjects = nsubjects, "
"0","                               detection_threshold = detection_threshold, "
"0","                              min_datapoints = 12, max_datapoints = 48, "
"0","                              mean_params = mean_params) %>%"
"0","        mutate(type = ""high"")"
"0","    data_low <- simulate_data(nsubjects = nsubjects, "
"0","                              detection_threshold = detection_threshold, "
"0","                             min_datapoints = 3, max_datapoints = 12, "
"0","                             mean_params = mean_params) %>%"
"0","        mutate(type = ""low"")"
"0","    "
"0","    # 2. fit model to each dataset"
"0","    model0 <- mash(data = data0, detection_threshold = detection_threshold)"
"0","    "
"0","    model_fine <- mash(data = data_fine, detection_threshold = detection_threshold)"
"0","    model_low <- mash(data = data_low, detection_threshold = detection_threshold)"
"0","    "
"0","    # 3. get TTS estimates"
"0","    TTS0 <- get_TTS(model_output = model0, "
"0","                    suppression_threshold = detection_threshold, parametric = TRUE) %>% "
"0","        filter(model == ""biphasic"") %>% "
"0","        select(id, TTS) %>% mutate(type = ""intermediate"")"
"0","    "
"0","    TTS_fine <- get_TTS(model_output = model_fine, "
"0","                        suppression_threshold = detection_threshold, parametric = TRUE) %>% "
"0","        filter(model == ""biphasic"") %>% "
"0","        select(id, TTS) %>% mutate(type = ""high"")"
"0","        "
"0","    TTS_low <- get_TTS(model_output = model_low, "
"0","                       suppression_threshold = detection_threshold, parametric = TRUE) %>% "
"0","        filter(model == ""biphasic"") %>% "
"0","        select(id, TTS) %>% mutate(type = ""low"")"
"0","    "
"0","    "
"0","    # 4. get biphasic CIs"
"0","    biphasicCI0 <- model0$biphasicCI %>% mutate(type = ""intermediate"")"
"0","    biphasic_fine <- model_fine$biphasicCI %>% mutate(type = ""high"")"
"0","    biphasic_low <- model_low$biphasicCI %>% mutate(type = ""low"")"
"0","        "
"0","    # 5. get true parameter values for subjects fit with the biphasic model"
"0","    true0 <- data0 %>% filter(id %in% biphasicCI0$id) %>% "
"0","        distinct(id, A, delta, B, gamma, type) %>%"
"0","        mutate(TTS = get_parametricTTS(params = ., rootfunction = biphasic_root, "
"0","                                       suppression_threshold = detection_threshold, "
"0","                                       uppertime = 365),"
"0","               model = ""biphasic"", calculation = ""parametric"")"
"0","    "
"0","    true_fine <- data_fine %>% filter(id %in% biphasic_fine$id) %>% "
"0","        distinct(id, A, delta, B, gamma, type) %>%"
"0","        mutate(TTS = get_parametricTTS(params = ., rootfunction = biphasic_root, "
"0","                                       suppression_threshold = detection_threshold, "
"0","                                       uppertime = 365),"
"0","               model = ""biphasic"", calculation = ""parametric"")"
"0","      "
"0","    true_low <-  data_low %>% filter(id %in% biphasic_low$id) %>% "
"0","        distinct(id, A, delta, B, gamma, type) %>%"
"0","        mutate(TTS = get_parametricTTS(params = ., rootfunction = biphasic_root, "
"0","                                       suppression_threshold = detection_threshold, "
"0","                                       uppertime = 365),"
"0","               model = ""biphasic"", calculation = ""parametric"")"
"0","    "
"0","    # 6. collect results"
"0","    data_all <- rbind(data0, data_fine, data_low) %>% "
"0","        mutate(simulation = simulation)"
"0","        "
"0","    true_all <- rbind(true0, true_fine, true_low) %>% "
"0","        mutate(shortlifespan = 1/delta, longlifespan = 1/gamma,"
"0","               logA = log10(A), logB = log10(B)) %>%"
"0","        gather(param, true, A:gamma, shortlifespan:logB, TTS) %>% "
"0","        mutate(simulation = simulation)"
"0","    "
"0","    TTS_all <- rbind(TTS0, TTS_fine, TTS_low)"
"0","    "
"0","    biphasic_all <- rbind(biphasicCI0, biphasic_fine, biphasic_low) %>% "
"0","        mutate(simulation = simulation) %>% "
"0","        distinct(id, param, estimate, type, simulation) %>% "
"0","        spread(param, estimate) %>%"
"0","        mutate(shortlifespan = 1/delta, longlifespan = 1/gamma, "
"0","               logA = log10(A), logB = log10(B)) %>%"
"0","        left_join(TTS_all) %>%"
"0","        gather(param, estimate, A:logB, TTS)"
"0","    "
"0","    # 7. get deviation scores"
"0","    stats <- biphasic_all  %>%"
"0","        left_join(true_all) %>% "
"0","        group_by(type, param) %>% mutate(n = n()) %>%"
"0","        mutate(deviation = (true - estimate)/true) %>%"
"0","        summarize(deviation = sum(deviation)/unique(n)) %>% ungroup() %>%"
"0","        arrange(desc(abs(deviation))) %>% mutate(simulation = simulation)"
"0","    "
"0","    return(list(data = data_all, biphasic_all = biphasic_all, stats = stats))"
"0","}"
