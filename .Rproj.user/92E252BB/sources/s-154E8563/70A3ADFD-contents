require(tidyverse)
require(readxl)

studydata <- read_excel("/Users/sineadmorris/Dropbox/Postdoc/HIVneonates/January19/Data/followup20190110.xlsx", na=".")

studydata <- studydata %>% select(id = studyid, vl = child_vl, time = age)

#detection_threshold = 20
censortime = 365
decline_buffer = 500
threshold_buffer = 10
VL_max_decline = 1e4
CI_max_diff = 1e3
n_min_single = 3
n_min_biphasic = 6

# forward_param_transform_fn = list(log, log, log, log)
# inv_param_transform_fn = list(exp, exp, exp, exp)
#
# initial_params = c(A = 10000, delta = 0.68, B = 1000, gamma = 0.03)
# searchmethod = "Nelder-Mead"
# metric = "ProfileLogLikelihood"
# weights = NULL


## Test with our data ---------------------------------

test <- mash(data = studydata)

model_output <- test

plot_model(model_output)

plot_model(model_output, type = "single")

TTS_outputNP <- get_TTS(data = studydata, parametric = FALSE)
plot_TTS(TTS_output = TTS_outputNP, bins = 20)


TTS_output <- get_TTS(model_output, parametric = TRUE)
plot_TTS(TTS_output, bins = 20)





## Still to do -------------------------------------------------------
# 1. Plotting function - NB need to catch errors e.g. if detection threshold is not supplied. Also use '...' so users can add extra things
# 2. @return description for functions
# 3. Order of IDs during printing/plotting e.g. S10 AFTER S9
# 3. Redo Vignette with new simulate data fn...
# 3. revert plot_model to plot; summarize_model to summary()
# 4. function to separate fast from slow estimates in the single phase model?

# After initial release
# 5. Shiny app where data can be uploaded and results downloaded


## New plot functione  -------------------------------------------------------

# keeps list class and adds to it
class(model_output) <- c("mashr", class(model_output))


plot.mashr <- function(model_output, type = "biphasic",
                       textsize = 9, pointsize = 1, linesize = 0.5,
                       detection_threshold = 20, ...){

    if (!requireNamespace("ggplot2", quietly = TRUE)) {
        stop("Package \"ggplot2\" is required for automated plotting.
             Either install it, or plot manually.")
    }
    if (is.null(data)) {
        stop("Please include model output from 'mash()' for plotting. If you want to plot data, use 'plot_data()'.")
    }
    # get desired fits for plotting
    if (type == "biphasic") {
        fits <- model_output$biphasic_fits
    } else {
        fits <- model_output$single_fits
    }

    if (nrow(fits) == 0) {
        stop("There are no fits of the type you have chosen. Try plotting the other type of fit ('biphasic', or 'single').")
    }

    data <- model_output$data_filtered %>% filter(id %in% unique(fits$id))

    mytheme <- get_plottheme(textsize)

    data %>% ggplot() + geom_point(aes(x = time, y = vl, group = id), size = pointsize) +
        geom_line(data = fits, aes(x = time, y = fit, group = id), lty = 1, col="black", size = linesize) +
        facet_wrap(~id) + mytheme +
        xlab("Time") + scale_y_log10("HIV viral load") +
        geom_hline(aes(yintercept = detection_threshold), linetype = "dashed")
    }

